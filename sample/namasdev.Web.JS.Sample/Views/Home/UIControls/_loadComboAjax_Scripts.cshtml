<script type="text/javascript">
    $(function () {
        setupDefault();
        setupCustom1();
        setupCustom2();

        setupSelectpickerDefault();
        setupSelectpickerCustom();

        setupMultiselectDefault();
        setupMultiselectCustom();

        function setupCombo(comboId, options) {
            var $combo = $('#' + comboId),
                $btnInitContainer = $combo.closest('div.control-container').find('.btn-init-container');

            $btnInitContainer
                .on('click', 'button.btn-init-item', function (ev) {
                    ev.preventDefault();

                    loadCombo($(this));
                });

            function loadCombo($btn) {
                var url = options && options.ajaxItemsProperty
                    ? generateComboItemsCustomPropertiesUrl($btn)
                    : generateComboItemsUrl($btn);

                nmd.ui.controls.loadComboAjax(comboId, url, options);
            }
        }

        function generateComboItemsUrl($btn) {
            return generateUrl('@Url.Action("GetComboItems", "Home")', $btn);
        }

        function generateComboItemsCustomPropertiesUrl($btn) {
            return generateUrl('@Url.Action("GetComboItemsCustomProperties", "Home")', $btn);
        }

        function generateUrl(baseUrl, $btn) {
            if ($btn != null
                && typeof $btn !== 'undefined'
                && $btn.data('error')) {
                baseUrl += '?fail=true';
            }
            return baseUrl;
        }

        function setupDefault() {
            setupCombo('ddlLCADef');
        }

        function setupCustom1() {
            // Loading full, ajax custom properties
            var options = {
                loadingEnabled: true,
                ajaxItemsProperty: 'Users',
                ajaxErrorProperty: 'ErrorMessage',
                itemsValueProperty: 'ID',
                itemsTextProperty: 'Name',
                itemsSelectedProperty: 'Checked',
            };
            setupCombo('ddlLCACus1', options);
        }

        function setupCustom2() {
            // Loading scoped, itemsAddedCallback, selected value
            var options = {
                loadingEnabled: true,
                loadingSelector: '#divLCACus2',
                itemsSelectedValue: '2',
                itemsAddedCallback: function ($combo) {
                    alert('This is the "Combo (custom 2)" items added callback.');
                    console.log($combo);
                }
            };
            setupCombo('ddlLCACus2', options);
        }

        function setupSelectpickerDefault() {
            setupCombo('ddlLCASPDef');
        }

        function setupSelectpickerCustom() {
            var options = {
                loadingEnabled: true,
                loadingSelector: '#divLCASPCus',
                itemsSelectedValue: '2',
            };
            setupCombo('ddlLCASPCus', options);
        }

        function setupMultiselectDefault() {
            setupCombo('ddlLCAMSDef');
        }

        function setupMultiselectCustom() {
            var options = {
                selectAllByDefault: true,
                loadingEnabled: true,
                loadingSelector: '#divLCAMSCus',
            };
            setupCombo('ddlLCAMSCus', options);
        }
    });
</script>
